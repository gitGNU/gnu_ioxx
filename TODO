#+TITLE: ioxx                               -*- mode: org; fill-column: 79; -*-

* Design

** TODO Should there be such a thing as an invalid =ioxx::socket=?

   The design could enforce that a =socket= is always valid, i.e. there would
   be no default constructor and no =release()= method. Is that desirable? Or
   is the additional flexibility of a stateful =socket= implementing =reset()=,
   =swap()=, and =release()= all over the place?

** TODO Will ioxx have a link library?

   Link libraries are a pain in the ass once different kinds of variants are
   involved. At the same time, a lot of socket code can be put into a link
   library just fine; including all those system headers everywhere is plain
   unnecessary.


* Known Bugs and Portability Problems

** TODO Specialization for =size(iovec const &)= doesn't compile with ICC 9.11.

   Boost 1.35 defines that function to return =range_difference<T>::type= --
   the signed type =byte_offset= for us --, but the current specialization
   returns =byte_size=, which is unsigned.

** TODO Boost libraries don't compile on AIX.

   The header-only libraries probably work, but Boost.Build doesn't seem to
   know about the IBM xlC++ compiler. Is it a good idea to use Boost.System
   after all? It's the only link library ioxx really needs at this point. The
   unit tests also need the unit_test_framework, naturally, but not being able
   to build those is a smaller problem than not being able to build the actual
   library. A simple replacement class for =system_error= might make things a
   lot easier.

** TODO Demuxer sockets support no =release()=, =swap()=, or =reset()=.

   The methods are publicly available through inheritance, but at attempt to
   actually use them will break things.
